import { RequestInit } from 'node-fetch';
import { APISearchRequest } from './api-types/APISearchRequest';
import { HAnimeSearch } from './HAnimeSearch';
import { APIShortVideoInfo } from './api-types/APIShortVideoInfo';
import { HAnimeVideo } from './HAnimeVideo';
export declare type SearchConfig = {
    [P in keyof Omit<APISearchRequest, 'search_text'>]?: APISearchRequest[P];
} & {
    search_text: string;
};
export declare class HAnimeAPI {
    private options?;
    constructor(options?: {
        fetch_options?: RequestInit;
        timeout?: number;
    });
    private static get_path;
    private static jetpack_url;
    static get_image_url(url: string, quality?: number, cdn?: string): string;
    private get_fetch_options;
    private get_tags_from_search;
    search(query: string, config?: Omit<SearchConfig, 'search_text'> & {
        auto_tag?: boolean;
    }): Promise<HAnimeSearch>;
    search(config: SearchConfig): Promise<HAnimeSearch>;
    private api_search;
    get_video(video: APIShortVideoInfo | string): Promise<HAnimeVideo>;
}
