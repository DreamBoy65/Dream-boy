"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HAnimeVideo = void 0;
const string_strip_html_1 = require("string-strip-html");
class HAnimeVideo {
    constructor(video) {
        this.video = video;
    }
    get titles() {
        return this.video.hentai_video.titles;
    }
    get name() {
        return this.video.hentai_video.name;
    }
    get views() {
        return this.video.hentai_video.views;
    }
    get interests() {
        return this.video.hentai_video.interests;
    }
    get poster_url() {
        return this.video.hentai_video.poster_url;
    }
    get cover_url() {
        return this.video.hentai_video.cover_url;
    }
    get video_url() {
        return `https://hanime.tv/videos/hentai/${this.video.hentai_video.slug}`;
    }
    get duration() {
        return this.video.hentai_video.duration_in_ms;
    }
    get brand() {
        return this.video.hentai_video.brand;
    }
    get rating() {
        return this.video.hentai_video.rating;
    }
    get likes() {
        return this.video.hentai_video.likes;
    }
    get dislikes() {
        return this.video.hentai_video.dislikes;
    }
    get downloads() {
        return this.video.hentai_video.downloads;
    }
    get monthly_rank() {
        return this.video.hentai_video.monthly_rank;
    }
    get created_at() {
        return new Date(this.video.hentai_video.created_at);
    }
    get released_at() {
        return new Date(this.video.hentai_video.released_at);
    }
    get description() {
        return string_strip_html_1.stripHtml(this.video.hentai_video.description).result;
    }
    get tags() {
        return this.video.hentai_tags;
    }
    get franchise() {
        return this.video.hentai_franchise;
    }
    get franchise_videos() {
        return this.video.hentai_franchise_hentai_videos;
    }
    get next_video() {
        return this.video.next_hentai_video;
    }
    get next_random_video() {
        return this.video.next_random_hentai_video;
    }
    get is_censored() {
        return this.video.hentai_video.is_censored;
    }
    get data() {
        return this.video;
    }
}
exports.HAnimeVideo = HAnimeVideo;
//# sourceMappingURL=HAnimeVideo.js.map